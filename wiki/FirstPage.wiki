#summary First site ;)
#labels Featured

= Introduction =

jUsuals is a project with common classes for Java like the apache-commons project. Helper classes are also contained as classes for use in tests. Useful classes and/or methods will be suggested in apache-commons step by step.

= How to add Maven dependencies ? =

For the core you need two dependencies unless a good assembly is created:

{{{
        <dependency>
            <groupId>org.mili.jusuals.core.api</groupId>
            <artifactId>jusuals-core-api</artifactId>
            <version>VERSION</version>
        </dependency>
        <dependency>
            <groupId>org.mili.jusuals.core.impl</groupId>
            <artifactId>jusuals-core-impl</artifactId>
            <version>VERSION</version>
        </dependency>
}}}

For test you need one dependency:
{{{
        <dependency>
            <groupId>org.mili.jusuals.test</groupId>
            <artifactId>jusuals-test</artifactId>
            <version>VERSION</version>
            <scope>test</scope>
        </dependency>
}}}

= How to build ? =

Just checkout the project and start Maven in the projects root:

{{{
mvn clean install
}}}

= How to deploy to Nexus ? =

Normally the artifacts are in the org.mili-repository but Nexus has some problems with such repositories.

Just replace the distributionManagement section in the jusuals/pom.xml to deploy to your own Nexus:

{{{
<distributionManagement>
    <repository>
        <id>nexus</id>
        <name>My Nexus Repo Name</name>
        <url>http://myserver:9091/nexus/content/repositories/mythirdpartylibs</url>
    </repository>
</distributionManagement>
}}}

then run Maven to deploy:

{{{
mvn deploy
}}}

= How to help? =

Just register on google.code and you can report issues. If you have some motivation to fix bugs (in hope there are none) or develop new functionalty or extend or or or, just make an issue and send me the well tested pieces of code directly per mail.